import{_ as d,I as u,c as p,o as r,ah as e,J as s,j as l,w as i,a as n}from"./chunks/framework.fGi7qB65.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/browser/http.md","filePath":"knowledge/browser/http.md"}'),o={name:"knowledge/browser/http.md"};function c(T,t,h,_,C,S){const a=u("Collapse");return r(),p("div",null,[t[2]||(t[2]=e("",7)),s(a,null,{default:i(()=>[...t[0]||(t[0]=[l("p",null,"TCP 是全双工的. 全双工（Full-duplex）：",-1),l("ul",null,[l("li",null,"即双方可以同时发送和接收数据。"),l("li",null,"所以连接断开时，双方都要单独关闭各自的发送方向。")],-1),l("p",null,"假设：客户端（主动关闭连接）服务器（被动关闭连接）",-1),l("p",null,"通信结束时，断开过程如下：",-1),l("table",{tabindex:"0"},[l("thead",null,[l("tr",null,[l("th",null,"步骤"),l("th",null,"方向"),l("th",null,"报文标志位"),l("th",null,"说明")])]),l("tbody",null,[l("tr",null,[l("td",null,"①"),l("td",null,"客户端 → 服务器"),l("td",null,[l("code",null,"FIN=1")]),l("td",null,"客户端请求关闭发送通道")]),l("tr",null,[l("td",null,"②"),l("td",null,"服务器 → 客户端"),l("td",null,[l("code",null,"ACK=1")]),l("td",null,"服务器确认接收")]),l("tr",null,[l("td",null,"③"),l("td",null,"服务器 → 客户端"),l("td",null,[l("code",null,"FIN=1")]),l("td",null,"服务器也关闭发送通道")]),l("tr",null,[l("td",null,"④"),l("td",null,"客户端 → 服务器"),l("td",null,[l("code",null,"ACK=1")]),l("td",null,"客户端确认接收，进入 TIME_WAIT")])])],-1),l("div",{class:"language-"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"}),l("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[l("code",null,[l("span",{class:"line"},[l("span",null,"客户端 (Client)                             服务器 (Server)")]),n(`
`),l("span",{class:"line"},[l("span",null,"------------------                          ------------------")]),n(`
`),l("span",{class:"line"},[l("span")]),n(`
`),l("span",{class:"line"},[l("span",null,"   ESTABLISHED                                  ESTABLISHED")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        | ① FIN=1, seq=u                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |--------------------------------------------->|")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                           收到 FIN, 发 ACK=1, ack=u+1")]),n(`
`),l("span",{class:"line"},[l("span",null,"        | ②                                            |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |<---------------------------------------------|")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                           服务器继续处理剩余数据")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                           ③ FIN=1, seq=v    |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |<---------------------------------------------|")]),n(`
`),l("span",{class:"line"},[l("span",null,"        | ④ ACK=1, ack=v+1                             |")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |--------------------------------------------->|")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |                                              |")]),n(`
`),l("span",{class:"line"},[l("span",null,"   TIME_WAIT(等待2MSL)                          CLOSED")]),n(`
`),l("span",{class:"line"},[l("span",null,"        |")]),n(`
`),l("span",{class:"line"},[l("span",null,"   连接彻底关闭")])])])],-1),l("p",null,"客户端最后要 等待 2×MSL（Maximum Segment Lifetime） 时间，约几十秒。",-1),l("p",null,"作用：",-1),l("ul",null,[l("li",null,[l("p",null,"确保服务器收到最终 ACK"),l("ul",null,[l("li",null,"若 ACK 丢失，服务器会重发 FIN。"),l("li",null,"客户端在 TIME_WAIT 状态还能重发 ACK。")])]),l("li",null,[l("p",null,"防止旧连接残余报文影响新连接"),l("ul",null,[l("li",null,"等待 MSL 确保网络中旧包都过期。")])])],-1),l("ol",null,[l("li",null,"为什么关闭要四次，而不是三次？ 因为 TCP 是全双工：")],-1),l("ul",null,[l("li",null,"一方关闭发送，不代表另一方也关闭；"),l("li",null,"必须双方都各自发送 FIN，确认关闭。")],-1),l("ol",{start:"2"},[l("li",null,"为什么客户端要 TIME_WAIT？")],-1),l("p",null,"防止最后的 ACK 丢失，确保连接彻底关闭。 另外，避免旧连接的数据干扰新连接。",-1),l("ol",{start:"3"},[l("li",null,"为什么是 “2MSL”？")],-1),l("p",null,"因为： 一个 MSL 是一个报文在网络中能存活的最长时间； 等 2×MSL，确保往返的所有旧报文都消失。",-1),l("ol",{start:"4"},[l("li",null,"如果服务器先关闭会怎样？")],-1),l("p",null,"流程相同，只是角色对调。 谁主动关闭，谁就经历 TIME_WAIT。",-1)])]),_:1}),t[3]||(t[3]=l("h3",{id:"_3-是什么队头阻塞",tabindex:"-1"},[n("3. 是什么队头阻塞 "),l("a",{class:"header-anchor",href:"#_3-是什么队头阻塞","aria-label":"Permalink to “3. 是什么队头阻塞”"},"​")],-1)),s(a,null,{default:i(()=>[...t[1]||(t[1]=[l("p",null,"队头阻塞就是“队列第一个请求卡住，后面全被拖延”。HTTP/3 通过 QUIC 彻底缓解了这个问题。",-1)])]),_:1}),t[4]||(t[4]=e("",2))])}const A=d(o,[["render",c]]);export{b as __pageData,A as default};
