import{_ as r,I as o,c as i,o as a,ah as u,J as d,w as s,j as l,a as t}from"./chunks/framework.fGi7qB65.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/browser/index.md","filePath":"knowledge/browser/index.md"}'),c={name:"knowledge/browser/index.md"};function p(S,n,h,T,P,m){const e=o("Collapse");return a(),i("div",null,[n[1]||(n[1]=u('<h3 id="_1-常见的性能指标" tabindex="-1">1.常见的性能指标 <a class="header-anchor" href="#_1-常见的性能指标" aria-label="Permalink to “1.常见的性能指标”">​</a></h3><p>Performance API 是浏览器提供的内置接口，用于测量网页的加载时间、资源性能和用户体验。</p><p>常见性能指标</p><ul><li>FP (First Paint)首次绘制 ，指用户第一次看到页面内容时的时间点（通常是背景颜色）。</li><li>FCP (First Contentful Paint)首次内容绘制 ，页面中首个内容（如文字、图片）被绘制的时间点。 优化思路 ：减少 CSS 阻塞、优化首屏加载内容。</li><li>LCP (Largest Contentful Paint)最大内容绘制 ，页面中最大内容元素（如主标题、图片）绘制完成的时间点。 优化思路 ：使用延迟加载策略、优化图像加载。</li><li>CLS (Cumulative Layout Shift)累积布局偏移 ，页面加载过程中视觉内容意外变化的总量。 优化思路 ：设置明确的宽高，避免懒加载导致布局移动。</li><li>FID (First Input Delay)首次输入延迟 ，用户第一次交互（如点击按钮）与浏览器响应之间的时间间隔。 优化思路 ：减少主线程阻塞。</li><li>TTI (Time to Interactive)可交互时间 ，页面完成加载并能够快速响应用户交互的时间</li></ul><h3 id="_2-sourcemap-有何作用" tabindex="-1">2. sourcemap 有何作用 <a class="header-anchor" href="#_2-sourcemap-有何作用" aria-label="Permalink to “2. sourcemap 有何作用”">​</a></h3><p>Source Map 是一种将压缩、混淆后的代码映射回源代码的文件，用于调试和定位错误。它的主要作用如下：</p><ul><li>调试优化 ：在开发者工具中看到源代码而非压缩后的代码。</li><li>错误定位 ：在生产环境中准确定位代码错误。</li><li>性能分析 ：配合性能工具对源代码进行优化分析。</li></ul><h3 id="_3-什么是-https-中间人攻击-如何预防" tabindex="-1">3.什么是 HTTPS 中间人攻击，如何预防 <a class="header-anchor" href="#_3-什么是-https-中间人攻击-如何预防" aria-label="Permalink to “3.什么是 HTTPS 中间人攻击，如何预防”">​</a></h3><p>中间人攻击（MITM, Man-In-The-Middle） 是指攻击者拦截客户端与服务器之间的通信，获取敏感信息或篡改数据。</p><p>攻击原理</p><p>攻击者通过伪造证书或劫持网络流量，冒充服务器或客户端，使通信双方无法察觉中间人的存在。</p><p>常见攻击手段</p><table tabindex="0"><thead><tr><th>攻击方式</th><th>描述</th></tr></thead><tbody><tr><td><strong>伪造 CA 证书</strong></td><td>诱导用户安装恶意根证书，使浏览器信任攻击者签发的假证书</td></tr><tr><td><strong>DNS 劫持</strong></td><td>篡改 DNS 解析，将域名指向攻击者的服务器</td></tr><tr><td><strong>ARP 欺骗 / Wi-Fi 劫持</strong></td><td>局域网或公共 Wi-Fi 中间人篡改流量</td></tr><tr><td><strong>SSL Strip（降级攻击）</strong></td><td>强制将 HTTPS 降级为 HTTP，窃取明文数据</td></tr></tbody></table><p>预防措施</p><ul><li><ol><li>启用 HTTPS 和强证书验证</li></ol><ul><li>配置 TLS 并购买可信的 SSL 证书。</li><li>使用 HSTS（HTTP Strict Transport Security）强制 HTTPS 访问。</li></ul></li><li><ol start="2"><li>证书固定（Certificate Pinning） 确保客户端只接受特定 CA 签发的证书。</li></ol></li><li><ol start="3"><li>开启 CORS 配置 配置严格的跨域策略，减少不必要的网络暴露。</li></ol></li><li><ol start="4"><li>安全头部配置</li></ol><ul><li>设置 Content-Security-Policy 防止资源篡改。</li><li>设置 Strict-Transport-Security 强制使用 HTTPS。</li></ul></li><li><ol start="5"><li>客户端验证 通过双向 TLS（Mutual TLS）验证客户端身份。</li></ol></li></ul><h3 id="_4-csp-是什么" tabindex="-1">4.CSP 是什么 <a class="header-anchor" href="#_4-csp-是什么" aria-label="Permalink to “4.CSP 是什么”">​</a></h3>',16)),d(e,null,{default:s(()=>[...n[0]||(n[0]=[l("p",null,"CSP 内容安全策略(白名单制度) 告诉浏览器：哪些资源可以加载和执行，哪些不允许,用来 防御 XSS、点击劫持、数据注入 等攻击. HTTP 响应头: Content-Security-Policy",-1),l("p",null,"CSP 就像是网站的“白名单防火墙” 明确允许的脚本、样式、图片、字体等来源，其他一律拒绝。",-1),l("p",null,"CSP 常用指令",-1),l("table",{tabindex:"0"},[l("thead",null,[l("tr",null,[l("th",null,"指令"),l("th",null,"控制的内容"),l("th",null,"示例")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("strong",null,"default-src")]),l("td",null,"默认资源加载策略"),l("td",null,[l("code",null,"'self'"),t("、"),l("code",null,"https:")])]),l("tr",null,[l("td",null,[l("strong",null,"script-src")]),l("td",null,"JavaScript 来源"),l("td",null,[l("code",null,"'self'"),t("、"),l("code",null,"https://cdn.example.com")])]),l("tr",null,[l("td",null,[l("strong",null,"style-src")]),l("td",null,"CSS 样式来源"),l("td",null,[l("code",null,"'self'"),t(),l("code",null,"'unsafe-inline'")])]),l("tr",null,[l("td",null,[l("strong",null,"img-src")]),l("td",null,"图片来源"),l("td",null,[l("code",null,"data:"),t("、"),l("code",null,"https://images.example.com")])]),l("tr",null,[l("td",null,[l("strong",null,"font-src")]),l("td",null,"字体来源"),l("td",null,[l("code",null,"'self'"),t("、"),l("code",null,"https://fonts.googleapis.com")])]),l("tr",null,[l("td",null,[l("strong",null,"connect-src")]),l("td",null,"AJAX / WebSocket 来源"),l("td",null,[l("code",null,"'self'"),t("、"),l("code",null,"https://api.example.com")])]),l("tr",null,[l("td",null,[l("strong",null,"frame-src")]),l("td",null,[l("code",null,"<iframe>"),t(" 来源")]),l("td",null,[l("code",null,"'self'"),t("、"),l("code",null,"https://youtube.com")])]),l("tr",null,[l("td",null,[l("strong",null,"object-src")]),l("td",null,"Flash / 插件来源"),l("td",null,[l("code",null,"'none'"),t("（推荐禁用）")])]),l("tr",null,[l("td",null,[l("strong",null,"report-uri")]),l("td",null,"报告 CSP 违规"),l("td",null,[l("code",null,"/csp-violation-report-endpoint/")])]),l("tr",null,[l("td",null,[l("strong",null,"upgrade-insecure-requests")]),l("td",null,"自动将 HTTP 升级为 HTTPS"),l("td",null,"无值")])])],-1)])]),_:1})])}const g=r(c,[["render",p]]);export{_ as __pageData,g as default};
