import{_ as a,I as d,c as o,o as i,j as l,J as e,a as t,w as r}from"./chunks/framework.fGi7qB65.js";const M=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ai/index.md","filePath":"ai/index.md"}'),s={name:"ai/index.md"};function p(g,n,P,m,A,C){const u=d("Collapse");return i(),o("div",null,[n[4]||(n[4]=l("h3",{id:"_1-ai-agent-是啥",tabindex:"-1"},[t("1. AI Agent 是啥? "),l("a",{class:"header-anchor",href:"#_1-ai-agent-是啥","aria-label":"Permalink to “1. AI Agent  是啥?”"},"​")],-1)),e(u,null,{default:r(()=>[...n[0]||(n[0]=[l("p",null,[t("AI Agent（智能代理） 是一个能够 "),l("strong",null,"感知环境、做决策、执行动作"),t(" 的系统。是能够感知环境、做决策并执行动作的智能系统，其复杂度从简单规则反应型到学习型智能体不等。")],-1),l("p",null,"AI Agent 的代码生成、辅助编程工具和提示工程 (Prompt Engineering) 工具",-1),l("p",null,"AI Agent 是能够感知环境、基于目标和策略做决策并执行动作的智能系统，现代应用多结合 LLM，实现自动化任务、多步推理和上下文增强。",-1)])]),_:1}),n[5]||(n[5]=l("h3",{id:"_2-mcp-是啥",tabindex:"-1"},[t("2. MCP 是啥 "),l("a",{class:"header-anchor",href:"#_2-mcp-是啥","aria-label":"Permalink to “2. MCP 是啥”"},"​")],-1)),e(u,null,{default:r(()=>[...n[1]||(n[1]=[l("p",null,"ai mcp 是啥: 传统的大语言模型通常只能访问其训练时的数据，无法获取实时信息或与外部系统交互。MCP 的引入，解决了这一限制，使 AI 助手能够：",-1),l("ul",null,[l("li",null,"访问实时数据：如数据库查询、网页抓取、API 调用等。"),l("li",null,"执行操作：如文件管理、任务调度、系统控制等。"),l("li",null,"增强上下文理解：通过标准化的协议，提供更丰富的上下文信息，提高回答的准确性和相关性。")],-1)])]),_:1}),n[6]||(n[6]=l("h3",{id:"_3-ai-mcp-与-agent-区别和相同是啥",tabindex:"-1"},[t("3. ai mcp 与 agent 区别和相同是啥 "),l("a",{class:"header-anchor",href:"#_3-ai-mcp-与-agent-区别和相同是啥","aria-label":"Permalink to “3. ai mcp 与 agent 区别和相同是啥”"},"​")],-1)),e(u,null,{default:r(()=>[...n[2]||(n[2]=[l("table",{tabindex:"0"},[l("thead",null,[l("tr",null,[l("th",null,"对比维度"),l("th",null,[l("strong",null,"AI MCP（Model Context Protocol）")]),l("th",null,[l("strong",null,"Agent（智能体）")])])]),l("tbody",null,[l("tr",null,[l("td",null,[l("strong",null,"核心定义")]),l("td",null,"一种开放协议，用于让 AI 模型与外部工具、数据源、安全系统进行交互的标准化接口"),l("td",null,"一个具备感知、决策、行动能力的 AI 实体，能自主执行任务")]),l("tr",null,[l("td",null,[l("strong",null,"目标")]),l("td",null,"让 AI 模型具备“安全、受控地访问外部能力”的标准化方式"),l("td",null,"模拟人类行为与决策，实现自动化任务执行")]),l("tr",null,[l("td",null,[l("strong",null,"本质定位")]),l("td",null,"通信协议 / 桥梁层（模型与外部世界之间的 API 桥）"),l("td",null,"智能执行体 / 上层应用（基于协议或框架实现行为）")]),l("tr",null,[l("td",null,[l("strong",null,"是否具备决策逻辑")]),l("td",null,"❌ 无（仅负责传递与规范化上下文与调用）"),l("td",null,"✅ 有（根据上下文、记忆、目标做出决策）")]),l("tr",null,[l("td",null,[l("strong",null,"是否依赖模型")]),l("td",null,"✅ 是，为模型服务的协议层"),l("td",null,"✅ 是，通常内嵌或依赖大模型")]),l("tr",null,[l("td",null,[l("strong",null,"数据交互方式")]),l("td",null,"定义好的接口和上下文传递机制（如：tools、files、memory等）"),l("td",null,"主动感知 + 调用外部 API 或协议（可使用 MCP）")]),l("tr",null,[l("td",null,[l("strong",null,"典型实现者")]),l("td",null,"OpenAI MCP、Anthropic MCP 等"),l("td",null,"AutoGPT、LangChain Agent、OpenDevin、ChatGPT Agent 等")]),l("tr",null,[l("td",null,[l("strong",null,"可扩展性")]),l("td",null,"高，通过定义新的 MCP 服务器或工具接口扩展模型能力"),l("td",null,"高，可通过插件、工具链、MCP 等方式增强行为")]),l("tr",null,[l("td",null,[l("strong",null,"安全控制")]),l("td",null,"强，强调“模型可见范围”与“安全沙箱”"),l("td",null,"弱到中等，取决于实现（可能越权或误操作）")]),l("tr",null,[l("td",null,[l("strong",null,"运行层级")]),l("td",null,"模型与外部系统之间的“中间层”"),l("td",null,"应用层（运行在用户逻辑上层）")]),l("tr",null,[l("td",null,[l("strong",null,"示例场景")]),l("td",null,"模型通过 MCP 协议安全访问数据库、文件系统、内部 API"),l("td",null,"Agent 使用 MCP 工具自动检索文档、编写代码、执行命令")]),l("tr",null,[l("td",null,[l("strong",null,"关系总结")]),l("td",null,"提供 Agent 可用的“统一外部接口标准”"),l("td",null,"利用 MCP 作为工具访问协议来实现自主任务执行")])])],-1),l("p",null,"简单总结：",-1),l("p",null,"MCP 是“协议层” → 定义模型如何安全访问世界。 Agent 是“智能层” → 定义模型如何使用这些能力执行任务。",-1),l("p",null,"换句话说： MCP ≈ 插座标准， Agent ≈ 插在插座上运行的设备。",-1)])]),_:1}),n[7]||(n[7]=l("h3",{id:"_4-prompt-工程",tabindex:"-1"},[t("4. Prompt 工程 "),l("a",{class:"header-anchor",href:"#_4-prompt-工程","aria-label":"Permalink to “4. Prompt 工程”"},"​")],-1)),e(u,null,{default:r(()=>[...n[3]||(n[3]=[l("ul",null,[l("li",null,"Prompt 工程就是精心设计、优化和管理输入给大语言模型的提示，以最大化输出质量和准确性的技术。"),l("li",null,"Prompt 工程 = 设计和优化输入给 LLM 的提示（Prompt）以获得最准确、最有效输出的技术和方法"),l("li",null,[t("Prompt 工程的目标是 "),l("strong",null,"用最小代价让模型输出最期望的结果。")])],-1)])]),_:1})])}const I=a(s,[["render",p]]);export{M as __pageData,I as default};
